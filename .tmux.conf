# remap prefix to Control + ]
set -g prefix C-]
unbind C-b

set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# TODO: This shadows the default paste-buffer binding; should fix that.
bind-key ] send-prefix
bind-key C-] last-window

set -g default-terminal "screen-256color"

# use vi style keybindings
setw -g mode-keys vi

# xterm-style function key sequences
setw -g xterm-keys on

# Start window numbering at 1
set -g base-index 1

set -s escape-time 0

set -g set-titles on
set -g set-titles-string "#S.#W"

set -g history-limit 20000

# enable mouse scroll events
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-select-window on

# Easier to remember split commands
unbind %
bind-key | split-window -h
bind-key - split-window -v

# Start new window in the current pane's directory
bind-key c new-window -c "#{pane_current_path}"

# Start new window in $HOME
bind-key h new-window -c $HOME

# Rename all windows in this session sequentially
bind-key R move-window -r

# Start a vi in $HOME
bind-key v new-window -c $HOME $HOME/local/bin/vi

setw -g set-clipboard on

# Window cycling
bind-key -n "C-Left"  select-window -t :-
bind-key -n "C-Right" select-window -t :+
bind-key C-Space select-window -t :+

bind-key -tvi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Remove rbenv environment vars created when using tmuxinator
set-environment -u RBENV_DIR
set-environment -u RBENV_HOOK_PATH
set-environment -u RBENV_ROOT
set-environment -u RBENV_VERSION

# Smart pane switching with awareness of vim splits
bind-key -n C-h run "~/local/bin/tmux-nav-pane C-h"
bind-key -n C-j run "~/local/bin/tmux-nav-pane C-j"
bind-key -n C-k run "~/local/bin/tmux-nav-pane C-k"
bind-key -n C-l run "~/local/bin/tmux-nav-pane C-l"
bind-key -n C-\ run "~/local/bin/tmux-nav-pane 'C-\\'"

bind-key C-l send-keys C-l
bind-key C-k run "~/local/bin/tmux-wipe-pane"

run-shell "powerline-daemon -q"

if-shell 'test -z "$POWERLINE_CONFIG_COMMAND"' 'set-environment -g POWERLINE_CONFIG_COMMAND powerline-config'

run-shell 'eval $POWERLINE_CONFIG_COMMAND tmux setenv'

# Simplify tmux version checking by using multiple config files. Source these
# config files based on the version in which tmux features were added and/or
# deprecated. By splitting these configuration options into separate files,
run-shell 'eval $POWERLINE_CONFIG_COMMAND tmux source'

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-resurrect      \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
